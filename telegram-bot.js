import { getUserSettings, updateUserSettings } from './database.js';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function handleTelegramMessage(message) {
  const chatId = String(message.chat.id);
  const userId = message.from?.id;
  const text = message.text?.trim();
  
 // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let userSettings = getUserSettings(chatId);
  
  if (text === '/start' || text === '/help') {
    const helpMessage =
      `ü§ñ <b>–ü–∞—Ä–∫–æ–≤–æ—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç</b>\n\n` +
      `<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n` +
      `<code>/spot [–Ω–æ–º–µ—Ä]</code> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–º–µ—Ä –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞\n` +
      `<code>/status</code> - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–∞\n` +
      `<code>/cancel</code> - –û—Ç–º–µ–Ω–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ\n` +
      `<code>/help</code> - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞`;
    
    return {
      chat_id: chatId,
      text: helpMessage,
      parse_mode: 'HTML'
    };
  }
  
  if (text?.startsWith('/spot')) {
    const parts = text.split(/\s+/);
    if (parts.length < 2) {
      return {
        chat_id: chatId,
        text: '‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞.\n–ü—Ä–∏–º–µ—Ä: <code>/spot 123</code>',
        parse_mode: 'HTML'
      };
    }
    
    const spotNumber = parseInt(parts[1]);
    if (isNaN(spotNumber) || spotNumber <= 0) {
      return {
        chat_id: chatId,
        text: '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.',
        parse_mode: 'HTML'
      };
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userSettings = updateUserSettings(chatId, spotNumber);
    
    return {
      chat_id: chatId,
      text: `‚úÖ –í–∞—à–µ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: <b>${spotNumber}</b>\n–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ–≥–æ —Å—Ç–∞—Ç—É—Å.`,
      parse_mode: 'HTML'
    };
  }
  
  if (text === '/status') {
    if (!userSettings || !userSettings.parking_spot) {
      return {
        chat_id: chatId,
        text: '‚ÑπÔ∏è –í—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–æ–º–µ—Ä –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code>/spot [–Ω–æ–º–µ—Ä]</code>',
        parse_mode: 'HTML'
      };
    }
    
    return {
      chat_id: chatId,
      text: `üìã –í–∞—à–µ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ: <b>${userSettings.parking_spot}</b>\n–°—Ç–∞—Ç—É—Å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö.`,
      parse_mode: 'HTML'
    };
  }
  
  if (text === '/cancel') {
    userSettings = updateUserSettings(chatId, null);
    
    return {
      chat_id: chatId,
      text: '‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.',
      parse_mode: 'HTML'
    };
  }
  
  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞
  return {
    chat_id: chatId,
    text: 'ü§ñ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.',
    parse_mode: 'HTML'
  };
}

// –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–ª—è —á–∞—Ç–∞
export function getUserParkingSpot(chatId) {
  const settings = getUserSettings(chatId);
  return settings ? settings.parking_spot : null;
}