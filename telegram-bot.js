import { getUserSettings, updateUserSettings } from "./database.js";
import { messages } from "./config.js";
import { tick } from "./parking-monitor.js";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ @bot_username
function extractCommand(text) {
  if (!text) {
    return "";
  }
  // –£–¥–∞–ª—è–µ–º @bot_username –∏–∑ –∫–æ–º–∞–Ω–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, /start@mybot -> /start)
  return text.split("@")[0].trim();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function handleTelegramMessage(message) {
  const chatId = String(message.chat.id);
  const text = message.text?.trim();
  const command = extractCommand(text);

  let userSettings = getUserSettings(chatId);

  if (command === "/start" || command === "/help") {
    return {
      chat_id: chatId,
      text: messages.helpMessage,
      parse_mode: "HTML",
    };
  }

  if (command?.startsWith("/spot")) {
    const parts = text.split(/\s+/);
    if (parts.length < 2) {
      return {
        chat_id: chatId,
        text: "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞.\n–ü—Ä–∏–º–µ—Ä: <code>/spot 123</code>",
        parse_mode: "HTML",
      };
    }

    const spotNumber = parseInt(parts[1]);
    if (isNaN(spotNumber) || spotNumber <= 0) {
      return {
        chat_id: chatId,
        text: "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.",
        parse_mode: "HTML",
      };
    }

    userSettings = updateUserSettings(chatId, spotNumber);

    return {
      chat_id: chatId,
      text: `‚úÖ –í–∞—à–µ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: <b>${spotNumber}</b>\n–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ–≥–æ —Å—Ç–∞—Ç—É—Å.`,
      parse_mode: "HTML",
    };
  }

  if (command === "/status") {
    await tick();
    return null;
  }

  if (command === "/cancel") {
    userSettings = updateUserSettings(chatId, null);

    return {
      chat_id: chatId,
      text: "‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
      parse_mode: "HTML",
    };
  }

  return {
    chat_id: chatId,
    text: "ü§ñ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.",
    parse_mode: "HTML",
  };
}

// –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–ª—è —á–∞—Ç–∞
export function getUserParkingSpot(chatId) {
  const settings = getUserSettings(chatId);
  return settings ? settings.parking_spot : null;
}
